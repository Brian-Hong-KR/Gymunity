<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gymunity.challenge.repository.VerifyMapper">
	<resultMap id="verifyResultMap" type="Verify">
		<result column="vi_id" property="viId" />
		<result column="vi_user_id" property="userId" />
		<result column="vi_ch_id" property="chId" />
		<result column="upload1" property="upload1" />
		<result column="upload2" property="upload2" />
		<result column="update_verify" property="updateVerify" />
	</resultMap>

	<!-- 인증 사진 등록-->
	<!-- verify 테이블 데이터 삽입 -->
	<insert id="insertVerify" parameterType="Verify" useGeneratedKeys="true"
		keyProperty="viId">
		INSERT INTO verify (vi_user_id, vi_ch_id, upload1, upload2)
		VALUES (#{userId}, #{chId}, #{upload1}, #{upload2})
	</insert>

	<!-- verify 테이블 조회-->
	<select id="selectVerifyByUserIdAndChId" parameterType="int"
		resultMap="verifyResultMap">
		SELECT *
		FROM verify
		WHERE vi_user_id = #{userId} AND vi_ch_id = #{chId}
		ORDER BY update_verify DESC LIMIT 1
	</select>

	<!-- verify 테이블 업데이트-->
	<update id="updateVerify" parameterType="Verify">
		UPDATE verify
		SET upload2 = #{upload2}, update_verify = #{updateVerify}
		WHERE vi_user_id = #{userId}
		AND vi_ch_id = #{chId}
		AND vi_id = #{viId}
	</update>

	<!-- 1주일 인증 카운트-->
	<select id="countVerifiesThisWeek" resultType="int">
		SELECT COUNT(*)
		FROM verify
		WHERE vi_user_id = #{userId}
		AND vi_ch_id = #{chId}
		AND update_verify BETWEEN #{startOfWeek} AND #{endOfWeek}
	</select>

	<!-- 사진첩 -->
	<!-- userId로 사진 정보와 챌린지 정보 조회 -->
	<select id="selectPhotosByUserId" resultType="PhotoDTO">
		SELECT v.upload1 AS imagePath1, v.upload2 AS imagePath2, c.title AS
		challengeTitle, c.proceed AS proceed, v.update_verify AS dateUpdated
		FROM verify v
		JOIN challenges c ON v.vi_ch_id = c.ch_id
		WHERE v.vi_user_id = #{userId} AND 
          (v.upload1 IS NOT NULL) AND 
          (v.upload2 IS NOT NULL)
		ORDER BY c.ch_id, v.update_verify DESC
	</select>

	<!-- verify 테이블에서 upload1 or upload2 삭제-->
	<update id="deletePhoto">
		UPDATE verify
		SET upload1 = CASE WHEN upload1 = #{photoPath} THEN NULL ELSE upload1 END,
		upload2 = CASE WHEN upload2 = #{photoPath} THEN NULL ELSE upload2 END
		WHERE (upload1 = #{photoPath} OR upload2 = #{photoPath}) AND vi_user_id = #{userId}
	</update>

</mapper>   
