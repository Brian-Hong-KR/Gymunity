<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gymunity.point.repository.PointMapper">
	
	<!-- point_add 테이블에 데이터 삽입 -->
	<insert id="addPoint" parameterType="PointAdd">
		<![CDATA[ 
		INSERT INTO point_add (user_id, points_added, added_reason)
		VALUES (#{userId}, #{pointsAdded}, #{addedReason})
		]]>
	</insert>
    
    <insert id="addOrUpdatePointsAggr" parameterType="int">
        <!-- point_aggr 테이블에 데이터를 삽입하는 쿼리 -->
        INSERT INTO point_aggr (user_id, total_points, current_points)
        VALUES (
            #{userId}, <!-- userId를 테이블에 삽입 -->
            <!-- point_add 테이블에서 해당 userId에 대한 points_added의 합을 total_points에 계산하여 삽입 -->
            (SELECT COALESCE(SUM(points_added), 0) FROM point_add WHERE user_id = #{userId}),
            <!-- point_add 테이블에서 해당 userId에 대한 points_added의 합을 current_points에 계산하여 삽입 -->
            (SELECT COALESCE(SUM(points_added), 0) FROM point_add WHERE user_id = #{userId})
        )
        ON DUPLICATE KEY UPDATE
        <!-- point_add 테이블에서 가장 최근에 추가된 points_added 값을 total_points와 current_points에 더함 -->
        total_points = total_points + (SELECT points_added FROM point_add WHERE user_id = #{userId} ORDER BY added_at DESC LIMIT 1),
        current_points = current_points + (SELECT points_added FROM point_add WHERE user_id = #{userId} ORDER BY added_at DESC LIMIT 1);
    </insert>
    
    <!-- point_subtract 테이블에 데이터 삽입 -->
	<insert id="subtractPoint" parameterType="PointSubtract">
		<![CDATA[ 
		INSERT INTO point_subtract (user_id, points_subtracted, subtracted_reason)
		VALUES (#{userId}, #{pointsSubtracted}, #{subtractedReason})
		]]>
	</insert>
	
	<insert id="subtractOrUpdatePointsAggr" parameterType="int">
        <!-- point_aggr 테이블에 데이터를 삽입하는 쿼리 -->
        INSERT INTO point_aggr (user_id, total_points, current_points)
        VALUES (
            #{userId}, <!-- userId를 테이블에 삽입 -->
            <!-- point_subtract 테이블에서 해당 userId에 대한 points_subtracted의 합을 total_points에 계산하여 삽입 -->
            (SELECT COALESCE(SUM(points_subtracted), 0) FROM point_subtract WHERE user_id = #{userId}),
            <!-- point_subtract 테이블에서 해당 userId에 대한 points_subtracted의 합을 current_points에 계산하여 삽입 -->
            (SELECT COALESCE(SUM(points_subtracted), 0) FROM point_subtract WHERE user_id = #{userId})
        )
        ON DUPLICATE KEY UPDATE
        <!-- point_subtract 테이블에서 가장 최근에 추가된 points_subtracted 값을 total_points와 current_points에 더함 -->
        total_points = total_points + (SELECT points_subtracted FROM point_subtract WHERE user_id = #{userId} ORDER BY subtracted_at DESC LIMIT 1),
        current_points = current_points + (SELECT points_subtracted FROM point_subtract WHERE user_id = #{userId} ORDER BY subtracted_at DESC LIMIT 1);
    </insert>

</mapper>
	
	<!-- point_aggr 테이블에 데이터 업데이트 -->
	<!-- 
	<insert id="addOrUpdatePointsAggregate" parameterType="int">
        INSERT INTO point_aggr (user_id, total_points)
        VALUES (#{userId}, 0)
        ON DUPLICATE KEY UPDATE
        total_points = total_points + (SELECT points_added FROM point_add WHERE user_id = #{userId} ORDER BY added_at DESC LIMIT 1)
    </insert> -->